import { useState, useEffect } from 'react';
import { useMeetingStore } from '../../../../store/useMeetingStore';
import { useAutoSave } from '../../../../hooks/useAutoSave';
import { Card } from '../../../Common/Card';

export function ImplErpSpec() {
  const { currentMeeting, updateMeeting } = useMeetingStore();
  const [config, setConfig] = useState<any>({
    ...{ platform: 'sap_s4hana', estimatedMonths: 12 }
  });

  // Auto-save hook for immediate saving
  const { saveData, isSaving, saveError } = useAutoSave({
    serviceId: 'impl-erp',
    category: 'systemImplementations'
  });

  useEffect(() => {
    const systemImplementations = currentMeeting?.implementationSpec?.systemImplementations || [];
    const existing = systemImplementations.find((s: any) => s.serviceId === 'impl-erp');
    if (existing?.requirements) {
      setConfig(existing.requirements);
    }
  }, [currentMeeting]);

  // Auto-save whenever config changes
  useEffect(() => {
    if (config.platform) { // Only save if we have basic data
      saveData(config);
    }
  }, [config]);

  // Manual save handler (kept for compatibility, but auto-save is primary)
  const handleManualSave = async () => {
    // Force immediate save
    await saveData(config);
  };

  return (
    <div className="space-y-6" dir="rtl">
      <Card title="שירות #45: הטמעת ERP">
        <div className="space-y-4">
          <div><select className="w-full px-3 py-2 border border-gray-300 rounded-md"><option>SAP S/4HANA</option><option>Oracle NetSuite</option><option>Microsoft Dynamics</option></select></div>
          {/* Auto-Save Status and Manual Save */}
          <div className="flex justify-between items-center gap-4 pt-4 border-t">
            <div className="flex items-center gap-2">
              {isSaving && (
                <div className="flex items-center gap-2 text-blue-600">
                  <div className="w-4 h-4 border-2 border-blue-600 border-t-transparent rounded-full animate-spin"></div>
                  <span className="text-sm">שומר אוטומטית...</span>
                </div>
              )}
              {saveError && (
                <div className="flex items-center gap-2 text-red-600">
                  <span className="text-sm">שגיאה בשמירה</span>
                </div>
              )}
              {!isSaving && !saveError && config.platform && (
                <div className="flex items-center gap-2 text-green-600">
                  <div className="w-2 h-2 bg-green-600 rounded-full"></div>
                  <span className="text-sm">נשמר אוטומטית</span>
                </div>
              )}
            </div>
            <button
              onClick={handleManualSave}
              disabled={isSaving}
              className="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-sm"
            >
              שמור ידנית
            </button>
          </div>
        </div>
      </Card>
    </div>
  );
}
